# base image
FROM ubuntu:16.04

# install prerequisites
RUN apt-get update && apt-get install -y gcc g++ pkg-config cmake ninja-build libsqlite3-dev libboost-all-dev libssl-dev uuid-dev gradle openjdk-8-jdk

# install poco
ADD http://pocoproject.org/releases/poco-1.7.3/poco-1.7.3-all.tar.gz poco-1.7.3-all.tar.gz
RUN tar xzf poco-1.7.3-all.tar.gz
RUN /bin/bash -c "cd poco-1.7.3-all && cmake . -G Ninja"
RUN /bin/bash -c "cd poco-1.7.3-all && ninja install"

# create MASL directory
COPY . /root/masl

# set up environment variables
ENV LD_LIBRARY_PATH=/root/masl/install/lib:/poco-1.7.3-all/lib
ENV JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Djava.libary.path=${LD_LIBRARY_PATH}"

# build MASL
RUN /bin/bash -c "export JAVA_HOME=\$(dirname \$(dirname \$(dirname \$(readlink -f \$(which java))))) && cd /root/masl && cmake . -G Ninja -DCMAKE_INSTALL_PREFIX=/root/masl/install"
RUN mkdir -p /root/masl/core-java/install/masl-core/lib
RUN /bin/bash -c "cd /root/masl && ninja install"

# install openjdk-11
#ADD https://aka.ms/download-jdk/microsoft-jdk-11.0.14.9.1-linux-aarch64.tar.gz /scratch/openjdk-11
ADD https://aka.ms/download-jdk/microsoft-jdk-11.0.14.9.1-linux-x64.tar.gz      /scratch/openjdk-11
RUN tar xzf /scratch/openjdk-11 -C /usr/lib/jvm/
ADD docker/install-java.sh /tmp/install-java.sh
RUN /bin/bash /tmp/install-java.sh

# create workspace
WORKDIR /workspace
